1. Draw a BST
  Given the data 3,1,4,6,9,2,5,7, if you were to insert this into an empty binary search tree, what would the tree look like? (Draw the tree, no coding needed here.)
  Draw the BST with the keys - E A S Y Q U E S T I O N

            3
          /   \
         1     4
           \     \ 
            2     6
                 /  \
                5    9
                    /
                   7


            e(2)
           /    \
          a       s(2)
                /     \
               q       y
              /       /
             i       u
              \     /
               o   t
              / 
             n  

3. Create a BST class

  Walk through the binary search tree code in the curriculum and understand it well. Then write a BinarySearchTree class with its core functions (insert(), remove(), find()) from scratch.

  Create a binary search tree called BST and insert 3,1,4,6,9,2,5,7 into your tree. Compare your result with the result from the 1st exercise.
  Create a binary search tree called BST and insert E A S Y Q U E S T I O N into your tree. Compare your result with the result from the 1st exercise.

    easyquestion uses open addressing in the algo. In 1, I used a separate chaining type method.

5. Height of a BST

  Write an algorithm to find the height of a binary search tree. What is the time complexity of your algorithm?

    Height.js

7. 3rd largest node

  Write an algorithm to find the 3rd largest node in a binary search tree.

    ThirdLargest.js

9. Are they the same BSTs?

  You are given two arrays which represent two sequences of keys that are used to create two binary search trees. Write a program that will tell whether the two BSTs will be identical or not without actually constructing the tree. You may use another data structure such as an array or a linked list but don't construct the BST. What is the time complexity of your algorithm? E.g., 3, 5, 4, 6, 1, 0, 2 and 3, 1, 5, 2, 4, 6, 0 are two sequences of arrays but will create the exact same BSTs and your program should return true.

    